<<<<<<< HEAD
global:
  dockerDefaults:
    dockerRegistryUrlTitan: docker-new.finnplay.net
  secretDefaults:
    secretStoreName: CHANGE_ME_SECRET_STORE_NAME
    secretStoreKind: SecretStore
globalTlsKeypairs:
- secretName: CHANGE_ME_INGRESS_TLS_WILDCARD_KEYPAIR_SECRET_NAME
  refreshInterval: 2h
globalDockerConfigs:
- secretName: CHANGE_ME_DOCKER_REGISTRY_DATA_SECRET_NAME
  refreshInterval: 2h
globalConfigMaps:
  global-activemq-vars:
    activemqMysqlHost: CHANGE_ME_MYSQL_HOST
    activemqMysqlDatabase: CHANGE_ME_ACTIVEMQ_DATABASE
gateway:
  enabled: false
cron-task-report:
  enabled: true
  nameOverride: cron-task-report
  app:
    localConfigMaps:
      application-vars:
        cronStrings: 0 3 * * * echo 'script to execute goes here'
    volumes:
    - name: log-volume
      emptyDir: {
        }
    volumeMounts:
    - name: log-volume
      mountPath: /logs
apache:
  enabled: true
  app:
    localConfigMaps:
      application-vars:
        domainName: CHANGE_ME_DOMAIN_NAME
        customer: CHANGE_ME_CUSTOMER_ID
        environment: CHANGE_ME_ENVIRONMENT
        boRegisteredSites: CHANGE_ME_CUSTOMER_ID
        webSiteName: CHANGE_ME_CUSTOMER_ID
        webSiteId: 101
        webApacheServerName: CHANGE_ME_CUSTOMER_ID.CHANGE_ME_DOMAIN_NAME
        webApacheServerAlias: CHANGE_ME_CUSTOMER_ID.CHANGE_ME_DOMAIN_NAME
        boApacheServerName: bo-CHANGE_ME_CUSTOMER_ID.CHANGE_ME_DOMAIN_NAME
        boApacheServerAlias: bo-CHANGE_ME_CUSTOMER_ID.CHANGE_ME_DOMAIN_NAME
        platformApacheServerName: limit-CHANGE_ME_CUSTOMER_ID.CHANGE_ME_DOMAIN_NAME
        platformApacheServerAlias: limit-CHANGE_ME_CUSTOMER_ID.CHANGE_ME_DOMAIN_NAME
        apisApacheServerName: apis-CHANGE_ME_CUSTOMER_ID.CHANGE_ME_DOMAIN_NAME
        apisApacheServerAlias: apis-CHANGE_ME_CUSTOMER_ID.CHANGE_ME_DOMAIN_NAME
        statusApacheServerName: payment-CHANGE_ME_CUSTOMER_ID.CHANGE_ME_DOMAIN_NAME
        statusApacheServerAlias: payment-CHANGE_ME_CUSTOMER_ID.CHANGE_ME_DOMAIN_NAME
        titanVersion2.47: true
  ingress:
    enabled: true
    additionalAnnotations:
      nginx.ingress.kubernetes.io/use-forwarded-headers: 'true'
      nginx.ingress.kubernetes.io/backend-protocol: HTTPS
      nginx.ingress.kubernetes.io/ssl-verify: 'false'
      nginx.ingress.kubernetes.io/whitelist-source-range: CHANGE_ME_IP_WHITELIST
    hosts:
    - host: CHANGE_ME_CUSTOMER_ID.CHANGE_ME_DOMAIN_NAME
      paths:
      - path: /
        pathType: ImplementationSpecific
        backend:
          service:
            name: https
            port:
              number: 443
    - host: apis-CHANGE_ME_CUSTOMER_ID.CHANGE_ME_DOMAIN_NAME
      paths:
      - path: /
        pathType: ImplementationSpecific
        backend:
          service:
            name: https
            port:
              number: 443
    - host: payment-CHANGE_ME_CUSTOMER_ID.CHANGE_ME_DOMAIN_NAME
      paths:
      - path: /
        pathType: ImplementationSpecific
        backend:
          service:
            name: https
            port:
              number: 443
    - host: bo-CHANGE_ME_CUSTOMER_ID.CHANGE_ME_DOMAIN_NAME
      paths:
      - path: /
        pathType: ImplementationSpecific
        backend:
          service:
            name: https
            port:
              number: 443
    - host: limit-CHANGE_ME_CUSTOMER_ID.CHANGE_ME_DOMAIN_NAME
      paths:
      - path: /
        pathType: ImplementationSpecific
        backend:
          service:
            name: https
            port:
              number: 443
    tls:
    - hosts:
      - CHANGE_ME_CUSTOMER_ID.CHANGE_ME_DOMAIN_NAME
      - bo-CHANGE_ME_CUSTOMER_ID.CHANGE_ME_DOMAIN_NAME
      - apis-CHANGE_ME_CUSTOMER_ID.CHANGE_ME_DOMAIN_NAME
      - payment-CHANGE_ME_CUSTOMER_ID.CHANGE_ME_DOMAIN_NAME
      - limit-CHANGE_ME_CUSTOMER_ID.CHANGE_ME_DOMAIN_NAME
      secretName: CHANGE_ME_INGRESS_TLS_WILDCARD_KEYPAIR_SECRET_NAME
consul:
  enabled: false
  global:
    logLevel: info
    logJSON: false
    tls:
      enabled: false
    metrics:
      enabled: false
  server:
    enabled: true
    connect: false
    replicas: 3
    storage: 10Gi
    storageClass: lvm-thin
    resources:
      requests:
        memory: 200Mi
        cpu: 100m
      limits:
        memory: 1000Mi
        cpu: 500m
cron-task:
  enabled: true
  nameOverride: cron-task
activemq:
  enabled: false
  app:
    resources:
      requests:
        cpu: 500m
        memory: 1024Mi
      limits:
        cpu: 1000m
        memory: 2048Mi
nginx:
  enabled: true
  nameOverride: nginx-platform
  app:
    image:
      tag: CHANGE_ME_NGINX_IMAGE_TAG
redis:
  enabled: true
  master:
    persistence:
      storageClass: lvm-thin
  replica:
    persistence:
      storageClass: lvm-thin
=======
---
# =============================================================================
# TITAN Support Services - Global Configuration Template
# =============================================================================
# This file contains global values for the TITAN Support Services deployment.
# Subchart-specific configurations are in separate files.
#
# ⚠️  IMPORTANT: You MUST customize the values marked with CHANGE_ME before deployment!
#
# Common customizations needed:
# 1. Update secret store name for your environment
# 2. Configure database connection details
# 3. Set correct domain names and customer identifiers
# 4. Update MySQL host IPs
# =============================================================================

global:
  dockerDefaults:
    dockerRegistryUrlTitan: docker-new.finnplay.net

  secretDefaults:
    secretStoreName: "CHANGE_ME_SECRET_STORE_NAME"  # Example: finnplay-prod-secretstore
    secretStoreKind: SecretStore # pragma: allowlist secret

# TLS certificates - secrets should contain "certificate" and "privateKey" keys
globalTlsKeypairs:
  - secretName: "CHANGE_ME_INGRESS_TLS_WILDCARD_KEYPAIR_SECRET_NAME"
    refreshInterval: "2h"

# Docker registry credentials - secrets should contain "username", "password" and "registry" keys
globalDockerConfigs:
  - secretName: "CHANGE_ME_DOCKER_REGISTRY_DATA_SECRET_NAME" # pragma: allowlist secret
    refreshInterval: "2h"

globalConfigMaps:
  global-activemq-vars:
    activemqMysqlHost: "CHANGE_ME_MYSQL_HOST"  # Example: 10.0.3.74
    activemqMysqlDatabase: "CHANGE_ME_ACTIVEMQ_DATABASE"  # Example: titan_activemq_prod_k8s
>>>>>>> 2a53bcf (init test data)
