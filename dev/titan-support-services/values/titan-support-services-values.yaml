---
# =============================================================================
# TITAN Support Services - Configuration Template
# =============================================================================
# This file contains skeleton values for the TITAN Support Services deployment.
#
# ⚠️  IMPORTANT: You MUST customize the values marked with CHANGE_ME before deployment!
#
# Common customizations needed:
# 1. Update secret store name for your environment
# 2. Configure database connection details
# 3. Set correct domain names and customer identifiers
# 4. Update MySQL host IPs
# 5. Configure ingress hostnames and IP whitelist
# =============================================================================

global:
  dockerDefaults:
    dockerRegistryUrlTitan: docker-new.finnplay.net

  secretDefaults:
    secretStoreName: "CHANGE_ME_SECRET_STORE_NAME"  # Example: finnplay-prod-secretstore
    secretStoreKind: SecretStore # pragma: allowlist secret

# TLS certificates - secrets should contain "certificate" and "privateKey" keys
globalTlsKeypairs:
  - secretName: "CHANGE_ME_INGRESS_TLS_WILDCARD_KEYPAIR_SECRET_NAME"
    refreshInterval: "2h"

# Docker registry credentials - secrets should contain "username", "password" and "registry" keys
globalDockerConfigs:
  - secretName: "CHANGE_ME_DOCKER_REGISTRY_DATA_SECRET_NAME" # pragma: allowlist secret
    refreshInterval: "2h"

globalConfigMaps:
  global-activemq-vars:
    activemqMysqlHost: "CHANGE_ME_MYSQL_HOST"  # Example: 10.0.3.74
    activemqMysqlDatabase: "CHANGE_ME_ACTIVEMQ_DATABASE"  # Example: titan_activemq_prod_k8s

# Gateway service (usually disabled for support services)
gateway:
  enabled: false

# Cron task reporting service
cron-task-report:
  enabled: true
  nameOverride: cron-task-report
  app:
    localConfigMaps:
      application-vars:
        cronStrings: "0 3 * * * echo 'script to execute goes here'"
    volumes:
      - name: log-volume
        emptyDir: {}
    volumeMounts:
      - name: log-volume
        mountPath: /logs

# Apache web server configuration
apache:
  enabled: true
  app:
    localConfigMaps:
      application-vars:
        domainName: "CHANGE_ME_DOMAIN_NAME"  # Example: finnplay.net
        customer: "CHANGE_ME_CUSTOMER_ID"  # Example: prod1ks
        environment: "CHANGE_ME_ENVIRONMENT"  # Example: prod
        boRegisteredSites: "CHANGE_ME_CUSTOMER_ID"  # Should match customer above
        webSiteName: "CHANGE_ME_CUSTOMER_ID"  # Should match customer above
        webSiteId: 101
        webApacheServerName: "CHANGE_ME_CUSTOMER_ID.CHANGE_ME_DOMAIN_NAME"  # Example: prod1ks.finnplay.net
        webApacheServerAlias: "CHANGE_ME_CUSTOMER_ID.CHANGE_ME_DOMAIN_NAME"
        boApacheServerName: "bo-CHANGE_ME_CUSTOMER_ID.CHANGE_ME_DOMAIN_NAME"  # Example: bo-prod1ks.finnplay.net
        boApacheServerAlias: "bo-CHANGE_ME_CUSTOMER_ID.CHANGE_ME_DOMAIN_NAME"
        platformApacheServerName: "limit-CHANGE_ME_CUSTOMER_ID.CHANGE_ME_DOMAIN_NAME"
        platformApacheServerAlias: "limit-CHANGE_ME_CUSTOMER_ID.CHANGE_ME_DOMAIN_NAME"
        apisApacheServerName: "apis-CHANGE_ME_CUSTOMER_ID.CHANGE_ME_DOMAIN_NAME"
        apisApacheServerAlias: "apis-CHANGE_ME_CUSTOMER_ID.CHANGE_ME_DOMAIN_NAME"
        statusApacheServerName: "payment-CHANGE_ME_CUSTOMER_ID.CHANGE_ME_DOMAIN_NAME"
        statusApacheServerAlias: "payment-CHANGE_ME_CUSTOMER_ID.CHANGE_ME_DOMAIN_NAME"
        titanVersion2.47: true

  ingress:
    enabled: true
    additionalAnnotations:
      nginx.ingress.kubernetes.io/use-forwarded-headers: "true"
      nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
      nginx.ingress.kubernetes.io/ssl-verify: "false"
      nginx.ingress.kubernetes.io/whitelist-source-range: "CHANGE_ME_IP_WHITELIST"  # Example: 192.168.1.0/24,10.0.0.0/8

    hosts:
      - host: "CHANGE_ME_CUSTOMER_ID.CHANGE_ME_DOMAIN_NAME"  # Example: prod1ks.finnplay.net
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: https
                port:
                  number: 443
      - host: "apis-CHANGE_ME_CUSTOMER_ID.CHANGE_ME_DOMAIN_NAME"
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: https
                port:
                  number: 443
      - host: "payment-CHANGE_ME_CUSTOMER_ID.CHANGE_ME_DOMAIN_NAME"
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: https
                port:
                  number: 443
      - host: "bo-CHANGE_ME_CUSTOMER_ID.CHANGE_ME_DOMAIN_NAME"
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: https
                port:
                  number: 443
      - host: "limit-CHANGE_ME_CUSTOMER_ID.CHANGE_ME_DOMAIN_NAME"
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: https
                port:
                  number: 443

    tls:
      - hosts:
          - "CHANGE_ME_CUSTOMER_ID.CHANGE_ME_DOMAIN_NAME"
          - "bo-CHANGE_ME_CUSTOMER_ID.CHANGE_ME_DOMAIN_NAME"
          - "apis-CHANGE_ME_CUSTOMER_ID.CHANGE_ME_DOMAIN_NAME"
          - "payment-CHANGE_ME_CUSTOMER_ID.CHANGE_ME_DOMAIN_NAME"
          - "limit-CHANGE_ME_CUSTOMER_ID.CHANGE_ME_DOMAIN_NAME"
        secretName: "CHANGE_ME_INGRESS_TLS_WILDCARD_KEYPAIR_SECRET_NAME" # pragma: allowlist secret

# Consul service discovery configuration
consul:
  enabled: false
  global:
    logLevel: "info"
    logJSON: false
    tls:
      enabled: false
    metrics:
      enabled: false

  server:
    enabled: true
    connect: false
    replicas: 3
    storage: 10Gi
    storageClass: lvm-thin

    resources:
      requests:
        memory: "200Mi"
        cpu: "100m"
      limits:
        memory: "1000Mi"
        cpu: "500m"

# Cron task service
cron-task:
  enabled: true
  nameOverride: cron-task

# ActiveMQ message broker
activemq:
  enabled: false
  app:
    resources:
      requests:
        cpu: "500m"
        memory: "1024Mi"
      limits:
        cpu: "1000m"
        memory: "2048Mi"

# Nginx platform service
nginx:
  enabled: true
  nameOverride: nginx-platform
  app:
    image:
      tag: "CHANGE_ME_NGINX_IMAGE_TAG"

# Redis cache configuration
redis:
  enabled: true
  master:
    persistence:
      storageClass: "lvm-thin"
  replica:
    persistence:
      storageClass: "lvm-thin"
